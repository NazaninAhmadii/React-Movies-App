{"version":3,"sources":["components/layout/Header.js","components/forms/SearchForm.js","config/api_config.js","service/api.js","components/listItem/Item.js","components/layout/Loading.js","components/tabs/TabContent.js","components/layout/SelectBox.js","components/layout/Pagination.js","components/containers/TabContentContainer.js","components/tabs/TabPanel.js","components/screens/TabScreen.js","service/searchapi.js","components/containers/ContentContainer.js","App.js","serviceWorker.js","index.js"],"names":["getStyles","makeStyles","theme","root","background","border","borderRadius","boxShadow","color","height","padding","position","marginTop","header","fontSize","fontWeight","left","top","transform","TopHeader","classes","Container","className","button","margin","spacing","form","display","alignItems","justifyContent","textField","marginLeft","marginRight","width","formControl","Width","selectEmpty","SearchForm","props","onSubmit","TextField","label","name","onChange","e","onInputChange","target","value","variant","FormControl","InputLabel","htmlFor","Select","native","onSelectChange","inputProps","id","key","Button","type","size","startIcon","API_KEY","BASE_URL","getItems","sourceUrl","page","a","url","axios","get","params","api_key","response","items","data","useStyles","flexGrow","paper","image","img","maxWidth","maxHeight","Item","title","popularity","releasedDate","overview","imageUrl","Paper","Grid","container","item","ButtonBase","alt","src","xs","sm","direction","Typography","gutterBottom","Loading","TabContent","isLoading","map","element","poster_path","release_date","minWidth","SelectBox","rows","i","category","length","push","marginBottom","pagination","BasicPagination","itemsPerPage","totalItems","paginate","itemNumbers","Math","ceil","Pagination","count","currentPage","movieCategory","tvShowCategory","TabContentContainer","state","source","searchQuery","searchType","totalPage","indexOfLastItem","indexOfFirstItem","itemPerPage","currentItems","setState","fetchItems","then","results","floor","total_pages","slice","error","console","log","this","currPage","Component","box","textAlign","TabPanel","children","index","other","searchInitiated","searchText","searchItems","role","aria-labelledby","Box","p","LinkTab","Tab","component","onClick","event","preventDefault","backgroundColor","palette","tabColor","tabPanel","TabScreen","React","useState","setValue","AppBar","Tabs","newValue","aria-label","searchUrl","query","ContentContainer","handleInputChange","handleSubmit","App","fixed","Header","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"uMAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,WAAY,oDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,IACRC,QAAS,SACTC,SAAU,WACVC,UAAW,QAEbC,OAAQ,CACNC,SAAU,OACVC,WAAY,OACZJ,SAAU,WACVK,KAAM,MACNC,IAAK,MACLC,UAAW,6BAeAC,EAXG,WAChB,IAAMC,EAAUpB,IAChB,OACE,kBAACqB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAWC,UAAWF,EAAQjB,MAC5B,yBAAKmB,UAAWF,EAAQP,QAAxB,uB,uHCrBFb,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqB,OAAQ,CACNC,OAAQtB,EAAMuB,QAAQ,IAExBC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBjB,UAAWV,EAAMuB,QAAQ,IAE3BK,UAAW,CACTC,WAAY7B,EAAMuB,QAAQ,GAC1BO,YAAa9B,EAAMuB,QAAQ,GAC3BQ,MAAO,SAETC,YAAa,CACXtB,UAAWV,EAAMuB,QAAQ,KACzBO,YAAa9B,EAAMuB,QAAQ,GAC3BU,MAAO,SAETC,YAAa,CACXxB,UAAWV,EAAMuB,QAAQ,QAsDdY,EAlDI,SAACC,GAClB,IAAMlB,EAAUpB,IAChB,OACE,0BAAMsB,UAAWF,EAAQM,KAAMa,SAAUD,EAAMC,UAC7C,kBAACC,EAAA,EAAD,CACEC,MAAM,SACNC,KAAK,cACLpB,UAAWF,EAAQU,UACnBN,OAAO,SACPmB,SAAU,SAACC,GAAD,OAAON,EAAMO,cAAcD,EAAEE,OAAOC,QAC9CC,QAAQ,aAEV,kBAACC,EAAA,EAAD,CAAaD,QAAQ,WAAW1B,UAAWF,EAAQc,aACjD,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,8BAApB,eAGA,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNV,SAAU,SAACC,GAAD,OAAON,EAAMgB,eAAeV,EAAEE,OAAOC,QAC/CN,MAAM,cACNc,WAAY,CACVb,KAAM,aACNc,GAAI,+BAGN,4BAAQC,IAAI,KAAKV,MAAM,SAAvB,SAGA,4BAAQU,IAAI,KAAKV,MAAM,SAAvB,UAGA,4BAAQU,IAAI,KAAKV,MAAM,MAAvB,cAKJ,kBAACW,EAAA,EAAD,CACEV,QAAQ,WACR1B,UAAWF,EAAQG,OACnBoC,KAAK,SACLC,KAAK,QACLpD,MAAM,UACNqD,UAAW,kBAAC,IAAD,OANb,Y,qECxEOC,EAAU,mCACVC,EAAW,+BCoBTC,EAlBD,uCAAG,WAAOC,EAAWC,GAAlB,mBAAAC,EAAA,6DACTC,EAAML,EAAW,IAAME,EADd,kBAGUI,IAAMC,IAAIF,EAAK,CACpCG,OAAQ,CACNC,QAASV,EACTI,UANS,cAGPO,EAHO,OAUPC,EAAQD,EAASE,KAVV,kBAYND,GAZM,oGAAH,wD,mCCIRE,EAAY3E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ0E,SAAU,EACVrD,OAAQtB,EAAMuB,QAAQ,IAExBqD,MAAO,CACLpE,QAASR,EAAMuB,QAAQ,GACvBD,OAAQ,OACRS,MAAO,QAET8C,MAAO,CACL9C,MAAO,IACPxB,OAAQ,IACRE,SAAU,YAEZqE,IAAK,CACHxD,OAAQ,OACRG,QAAS,QACTsD,SAAU,OACVC,UAAW,OACXvE,SAAU,WACVK,KAAM,MACNE,UAAW,uBAqCAiE,MAjCf,SAAc7C,GAAQ,IACZkB,EAA4DlB,EAA5DkB,GAAI4B,EAAwD9C,EAAxD8C,MAAOC,EAAiD/C,EAAjD+C,WAAYC,EAAqChD,EAArCgD,aAAcC,EAAuBjD,EAAvBiD,SAAUC,EAAalD,EAAbkD,SACjDpE,EAAUwD,IAChB,OACE,yBAAKtD,UAAWF,EAAQjB,MACtB,kBAACsF,EAAA,EAAD,CAAOnE,UAAWF,EAAQ0D,MAAOrB,IAAKD,GACpC,kBAACkC,EAAA,EAAD,CAAMC,WAAS,EAAClE,QAAS,GACvB,kBAACiE,EAAA,EAAD,CAAME,MAAI,GACR,kBAACC,EAAA,EAAD,CAAYvE,UAAWF,EAAQ2D,OAC7B,yBAAKzD,UAAWF,EAAQ4D,IAAKc,IAAI,UAAUC,IAAKP,MAGpD,kBAACE,EAAA,EAAD,CAAME,MAAI,EAACI,GAAI,GAAIC,IAAE,EAACN,WAAS,GAC7B,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAACL,WAAS,EAACO,UAAU,SAASzE,QAAS,GAClD,kBAACiE,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,GACX,kBAACG,EAAA,EAAD,CAAYC,cAAY,EAACpD,QAAQ,MAC9BoC,GAEH,kBAACe,EAAA,EAAD,CAAYnD,QAAQ,QAAQoD,cAAY,EAAC5F,MAAM,iBAA/C,kBACkB8E,EADlB,kBAC+CD,GAE/C,kBAACc,EAAA,EAAD,CAAYnD,QAAQ,QAAQxC,MAAM,iBAC/B+E,UCnDJc,EAFC,kBAAM,8DCqCPC,EAlCI,SAAChE,GAAW,IACrBoC,EAAqBpC,EAArBoC,MAAO6B,EAAcjE,EAAdiE,UA8Bf,OAAO,kBAAClF,EAAA,EAAD,KAFsBkF,EA1BI,kBAAC,EAAD,MAI7B,yBAAKjF,UAAU,aACb,kBAACD,EAAA,EAAD,KACGqD,EAAM8B,KAAI,SAACC,GACV,OACE,kBAAC,EAAD,CACEhD,IAAKgD,EAAQjD,GACbA,GAAIiD,EAAQjD,GACZ4B,MAAOqB,EAAQrB,MAAQqB,EAAQrB,MAAQqB,EAAQ/D,KAC/C8C,SACE,iCAAmCiB,EAAQC,YAE7CrB,WAAYoB,EAAQpB,WACpBC,aAAcmB,EAAQE,aACtBpB,SAAUkB,EAAQlB,kBClB5BX,EAAY3E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyB,WAAY,SACZC,eAAgB,UAElBK,YAAa,CACXV,OAAQtB,EAAMuB,QAAQ,GACtBmF,SAAU,IACVhF,WAAY,SACZC,eAAgB,UAElBO,YAAa,CACXxB,UAAWV,EAAMuB,QAAQ,QAId,SAASoF,EAAUvE,GAGhC,IAFA,IAAMlB,EAAUwD,IACVkC,EAAO,GACJC,EAAI,EAAGA,EAAIzE,EAAM0E,SAASC,OAAQF,IACzCD,EAAKI,KACH,4BAAQzD,IAAKsD,EAAGhE,MAAOT,EAAM0E,SAASD,IACnCzE,EAAM0E,SAASD,KAKtB,OACE,yBAAKzF,UAAWF,EAAQjB,MACtB,kBAAC8C,EAAA,EAAD,CAAaD,QAAQ,WAAW1B,UAAWF,EAAQc,aACjD,kBAACgB,EAAA,EAAD,CAAYC,QAAQ,8BAApB,YACA,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNV,SAAU,SAACC,GAAD,OAAON,EAAMgB,eAAeV,EAAEE,OAAOC,QAC/CN,MAAM,WACNc,WAAY,CACVb,KAAM,WACNc,GAAI,+BAGLsD,K,aC3CLlC,EAAY3E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPS,UAAWV,EAAMuB,QAAQ,GACzB0F,aAAcjH,EAAMuB,QAAQ,IAC5Bd,SAAU,aAGdyG,WAAY,CACVzG,SAAU,WACVK,KAAM,MACNE,UAAW,uBAIA,SAASmG,EAAT,GAQb,IAJE,IAHFC,EAGC,EAHDA,aACAC,EAEC,EAFDA,WACAC,EACC,EADDA,SAEMpG,EAAUwD,IACV6C,EAAc,GAEXV,EAAI,EAAGA,GAAKW,KAAKC,KAAKJ,EAAaD,GAAeP,IACzDU,EAAYP,KAAKH,GAGnB,OACE,yBAAKzF,UAAWF,EAAQjB,MACtB,kBAACyH,EAAA,EAAD,CACEC,MAAON,EACP/G,MAAM,UACNmC,SAAU,SAACC,EAAGkF,GAAJ,OAAoBN,EAASM,IACvCxG,UAAWF,EAAQgG,cC7B3B,IAAMW,EAAgB,CAAC,UAAW,cAAe,YAAa,YACxDC,EAAiB,CAAC,UAAW,YAAa,eAAgB,cA+GjDC,E,4MA5GbC,MAAQ,CACNxD,MAAO,GACP6B,WAAW,EACX4B,OAAQ,EAAK7F,MAAM6F,QAAU,QAC7BC,YAAa,EAAK9F,MAAM8F,YACxBC,WAAY,EAAK/F,MAAM+F,YAAc,QACrCrB,SAAU,UACVsB,UAAW,EACXpE,KAAM,EACN4D,YAAa,EACbS,gBAAiB,GACjBC,iBAAkB,EAClBC,YAAa,GACbC,aAAc,I,EAUhBpF,e,uCAAiB,WAAO0D,GAAP,eAAA7C,EAAA,6DACP2D,EAAgB,EAAKI,MAArBJ,YADO,SAGT,EAAKa,SAAS,CAClB3B,WACAc,YAAa,IALA,OAOf,EAAKc,WAAWd,GAPD,2C,wDAUjBc,WAAa,SAAC1E,GAAU,IAAD,EAC2C,EAAKgE,MAA7DlB,EADa,EACbA,SAAUmB,EADG,EACHA,OAAQK,EADL,EACKA,iBAAkBD,EADvB,EACuBA,gBACtCtE,EAAYkE,EAAS,IAAMnB,EACjC,EAAK2B,SAAS,CACZpC,WAAW,IAGbvC,EAASC,EAAWC,GAAM2E,MACxB,SAACnE,GAEC,EAAKiE,SAAS,CACZjE,MAAOA,EAAMoE,QACbvC,WAAW,EACX+B,UAAWZ,KAAKqB,MAA0B,EAApBrE,EAAMsE,aAC5BN,aAAchE,EAAMoE,QAAQG,MAAMT,EAAkBD,QAGxD,SAACW,GACCC,QAAQC,IAAI,SAAZ,gCAA+CF,Q,kEAnChC,IACXhF,EAASmF,KAAKnB,MAAdhE,KAGRmF,KAAKT,WAAW1E,K,+BAoCR,IAAD,SAQHmF,KAAKnB,MANPxD,EAFK,EAELA,MACA6B,EAHK,EAGLA,UACA4B,EAJK,EAILA,OACAG,EALK,EAKLA,UACAI,EANK,EAMLA,aACAD,EAPK,EAOLA,YAKIjB,EAAQ,uCAAG,WAAO8B,GAAP,SAAAnF,EAAA,sEACT,EAAKwE,SAAS,CAClBzE,KAAMwD,KAAKC,KAAK2B,EAAW,GAC3BxB,YAAawB,EACbf,gBAAiBe,EAAW,IAAM,EAAI,GAAK,GAC3Cd,iBAAkBc,EAAW,IAAM,EAAI,EAAI,GAC3CZ,aAAchE,EAAMuE,MAClBK,EAAW,IAAM,EAAI,GAAK,GAC1BA,EAAW,IAAM,EAAI,EAAI,MARd,OAYf,EAAKV,WAAWlB,KAAKC,KAAK2B,EAAW,IAZtB,2CAAH,sDAed,OACE,kBAACjI,EAAA,EAAD,KACc,UAAX8G,EACC,kBAACtB,EAAD,CACEG,SAAUe,EACVzE,eAAgB+F,KAAK/F,iBAErB,KACQ,OAAX6E,EACC,kBAACtB,EAAD,CACEG,SAAUgB,EACV1E,eAAgB+F,KAAK/F,iBAErB,KACJ,kBAAC,EAAD,CAAYoB,MAAOgE,EAAcnC,UAAWA,IAC5C,kBAACc,EAAD,CACEC,aAAcmB,EACdlB,WAAYe,EACZd,SAAUA,S,GAtGc+B,aCJ5B3E,GAAY3E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJwB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElB2H,IAAK,CACHvH,MAAO,OACPL,WAAY,SACZC,eAAgB,SAChB4H,UAAW,cAoDAC,OAhDf,SAAkBpH,GAChB,IAAMlB,EAAUwD,KAGd7B,GASET,EAVFqH,SAUErH,EATFS,OACA6G,EAQEtH,EARFsH,MAOGC,GACDvH,EAPFwH,gBAOExH,EANFyH,WAMEzH,EALF8F,YAKE9F,EAJF+F,WAIE/F,EAHF0H,YAGE1H,EAFFiE,UAXqB,YAanBjE,EAbmB,mHAevB,OACE,uCACE2H,KAAK,WACL3I,UAAWF,EAAQjB,KACnBqD,GAAE,uBAAkBoG,GACpBM,kBAAA,kBAA4BN,IACxBC,GAEO,IAAV9G,GACC,kBAACoH,EAAA,EAAD,CAAKC,EAAG,EAAG9I,UAAWF,EAAQoI,KAC5B,kBAAC,EAAD,CAAqBrB,OAAQ,WAGtB,IAAVpF,GACC,kBAACoH,EAAA,EAAD,CAAKC,EAAG,EAAG9I,UAAWF,EAAQoI,KAC5B,4BAAKlH,EAAMyH,YACX,kBAAC,EAAD,CAAYrF,MAAOpC,EAAM0H,YAAazD,UAAWjE,EAAMiE,aAGhD,IAAVxD,GACC,kBAACoH,EAAA,EAAD,CAAKC,EAAG,EAAG9I,UAAWF,EAAQoI,KAC5B,kBAAC,EAAD,CAAqBrB,OAAQ,UCjDvC,SAASkC,GAAQ/H,GACf,OACE,kBAACgI,EAAA,EAAD,eACEC,UAAU,IACVC,QAAS,SAACC,GACRA,EAAMC,mBAEJpI,IAKV,IAAMsC,GAAY3E,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ0E,SAAU,EACV8F,gBAAiBzK,EAAM0K,QAAQxK,WAAW0E,MAC1CtD,OAAQtB,EAAMuB,QAAQ,GACtBnB,aAAc,EACdD,OAAQ,oBACRE,UAAW,yCAEbsK,SAAU,CACRF,gBAAiB,WAEnBG,SAAU,CACRnJ,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBjB,UAAWV,EAAMuB,QAAQ,QAwCdsJ,OApCf,SAAmBzI,GACjB,IAAMlB,EAAUwD,KADQ,EAEEoG,IAAMC,SAAS,GAFjB,mBAEjBlI,EAFiB,KAEVmI,EAFU,KAQxB,OACE,yBAAK5J,UAAWF,EAAQjB,MACtB,kBAACgL,EAAA,EAAD,CAAQxK,SAAS,UACf,kBAACyK,EAAA,EAAD,CACEpI,QAAQ,YACRD,MAAOA,EACPJ,SAVa,SAAC8H,EAAOY,GAC3BH,EAASG,IAUHC,aAAW,oBAEX,kBAACjB,GAAD,CAAS5H,MAAM,SAASnB,UAAWF,EAAQyJ,WAC3C,kBAACR,GAAD,CAAS5H,MAAM,gBAAgBnB,UAAWF,EAAQyJ,WAClD,kBAACR,GAAD,CAAS5H,MAAM,WAAWnB,UAAWF,EAAQyJ,aAGjD,kBAAC,GAAD,CACE9H,MAAOA,EACPzB,UAAWF,EAAQ0J,SACnB1C,YAAa9F,EAAM8F,YACnBC,WAAY/F,EAAM+F,WAClB0B,WAAYzH,EAAMyH,WAClBD,gBAAiBxH,EAAMwH,gBACvBE,YAAa1H,EAAM0H,YACnBzD,UAAWjE,EAAMiE,cC/CVyD,GApBE,uCAAG,WAAOuB,EAAWC,EAAOtH,GAAzB,mBAAAC,EAAA,6DACZC,EAAML,EAAW,IAAMwH,EAC7BpC,QAAQC,IAAIhF,GAFM,kBAIOC,IAAMC,IAAIF,EAAK,CACpCG,OAAQ,CACNC,QAASV,EACT0H,QACAtH,UARY,cAIVO,EAJU,OAYVC,EAAQD,EAASE,KAZP,kBAcTD,GAdS,uGAAH,0DCiGF+G,G,4MA5FbvD,MAAQ,CACN8B,YAAa,GACbzD,WAAW,EACX6B,YAAa,GACbC,WAAY,QACZyB,iBAAiB,EACjBC,WAAY,yB,EAGd2B,kBAAoB,SAACtD,GACnB,EAAKO,SAAS,CACZP,cACA2B,WAAY,mCAEa,IAAvB3B,EAAYnB,QACd,EAAK0B,SAAS,CACZmB,iBAAiB,EACjBC,WAAY,2B,EAKlBzG,e,uCAAiB,WAAO+E,GAAP,SAAAlE,EAAA,6DACfgF,QAAQC,IAAIf,GADG,SAET,EAAKM,SAAS,CAClBN,eAHa,2C,wDAOjBsD,aAAe,SAAC/I,EAAGsB,GAAU,IAAD,EAC2B,EAAKgE,MAAlDE,EADkB,EAClBA,YAAaC,EADK,EACLA,WAAYyB,EADP,EACOA,gBACjClH,EAAE8H,iBAEFvB,QAAQC,IAAI,oBAAqBhB,GAC7BA,EAAYnB,OAAS,GACvB,EAAK0B,SAAS,CACZmB,iBAAiB,EACjBC,WAAY,KAGhBZ,QAAQC,IAAI,gBAAiBf,GAC7Bc,QAAQC,IAAI,qBAAsBU,GAElCE,GADkB,UAAY3B,EACPD,GAAaS,MAClC,SAACmB,GACCb,QAAQC,IAAIY,GACZ,EAAKrB,SAAS,CACZqB,YAAaA,EAAYlB,QACzBvC,WAAW,IAEc,IAAvByD,EAAY/C,QACd,EAAK0B,SAAS,CACZoB,WAAY,oCAIlB,SAACb,GACCC,QAAQC,IAAI,SAAZ,gCAA+CF,Q,uDAK3C,IAAD,EAQHG,KAAKnB,MANPE,EAFK,EAELA,YACAC,EAHK,EAGLA,WACAyB,EAJK,EAILA,gBACAC,EALK,EAKLA,WACAxD,EANK,EAMLA,UACAyD,EAPK,EAOLA,YAGF,OACE,kBAAC3I,EAAA,EAAD,KACE,kBAAC,EAAD,CACEwB,cAAewG,KAAKqC,kBACpBpI,eAAgB+F,KAAK/F,eACrBf,SAAU8G,KAAKsC,eAEjB,kBAAC,GAAD,CACEvD,YAAaA,EACbC,WAAYA,EACZyB,gBAAiBA,EACjBC,WAAYA,EACZC,YAAaA,EACbzD,UAAWA,S,GAtFUgD,aCUhBqC,OAVf,WACE,OACE,kBAACvK,EAAA,EAAD,CAAWwK,OAAK,GACd,kBAACC,EAAD,MAEA,kBAAC,GAAD,QCAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9D,MAAK,SAAA+D,GACJA,EAAaC,gBAEdC,OAAM,SAAA5D,GACLC,QAAQD,MAAMA,EAAM6D,a","file":"static/js/main.1e0cc666.chunk.js","sourcesContent":["import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Container } from \"@material-ui/core\"\n\nconst getStyles = makeStyles((theme) => ({\n  root: {\n    background: \"linear-gradient(180deg, #017eff 30%, #01e8f8 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(245, 245, 245, .3)\",\n    color: \"white\",\n    height: 120,\n    padding: \"0 30px\",\n    position: \"relative\",\n    marginTop: \"10px\",\n  },\n  header: {\n    fontSize: \"42px\",\n    fontWeight: \"bold\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}))\n\nconst TopHeader = () => {\n  const classes = getStyles()\n  return (\n    <Container>\n      <Container className={classes.root}>\n        <div className={classes.header}>React Movies App</div>\n      </Container>\n    </Container>\n  )\n}\n\nexport default TopHeader\n","import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Search from \"@material-ui/icons/Search\"\nimport Select from \"@material-ui/core/Select\"\n\nconst getStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  form: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"400px\",\n  },\n  formControl: {\n    marginTop: theme.spacing(1.1),\n    marginRight: theme.spacing(1),\n    Width: \"200px\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst SearchForm = (props) => {\n  const classes = getStyles()\n  return (\n    <form className={classes.form} onSubmit={props.onSubmit}>\n      <TextField\n        label=\"Search\"\n        name=\"searchQuery\"\n        className={classes.textField}\n        margin=\"normal\"\n        onChange={(e) => props.onInputChange(e.target.value)}\n        variant=\"outlined\"\n      />\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">\n          Search Type\n        </InputLabel>\n        <Select\n          native\n          onChange={(e) => props.onSelectChange(e.target.value)}\n          label=\"Search Type\"\n          inputProps={{\n            name: \"searchType\",\n            id: \"outlined-age-native-simple\",\n          }}\n        >\n          <option key=\"10\" value=\"multi\">\n            Multi\n          </option>\n          <option key=\"20\" value=\"movie\">\n            Movies\n          </option>\n          <option key=\"30\" value=\"tv\">\n            TV_Shows\n          </option>\n        </Select>\n      </FormControl>\n      <Button\n        variant=\"outlined\"\n        className={classes.button}\n        type=\"submit\"\n        size=\"large\"\n        color=\"primary\"\n        startIcon={<Search />}\n      >\n        Search\n      </Button>\n    </form>\n  )\n}\n\nexport default SearchForm\n","export const API_KEY = \"a273cdc8ac770015c3619de02a0c369a\"\nexport const BASE_URL = \"https://api.themoviedb.org/3\"\n","import axios from \"axios\"\nimport { API_KEY, BASE_URL } from \"../config/api_config\"\n\nconst getItems = async (sourceUrl, page) => {\n  const url = BASE_URL + \"/\" + sourceUrl\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    })\n    // console.log(\"the data is: \", response.data)\n    const items = response.data\n\n    return items\n  } catch (err) {\n    throw err\n  }\n}\n\nexport default getItems\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport ButtonBase from \"@material-ui/core/ButtonBase\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    width: \"100%\",\n  },\n  image: {\n    width: 200,\n    height: 280,\n    position: \"relative\",\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n  },\n}))\n\nfunction Item(props) {\n  const { id, title, popularity, releasedDate, overview, imageUrl } = props\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper} key={id}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src={imageUrl} />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"h6\">\n                  {title}\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom color=\"textSecondary\">\n                  Released Date: {releasedDate} | Popularity: {popularity}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {overview}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Item\n","import React from \"react\"\n\nconst Loading = () => <h4>Loading, please be patient :)</h4>\n\nexport default Loading\n","import React from \"react\"\nimport { Container } from \"@material-ui/core\"\nimport Item from \"../listItem/Item\"\nimport Loading from \"../layout/Loading\"\n\nconst TabContent = (props) => {\n  const { items, isLoading } = props\n\n  const renderLoadingState = () => <Loading />\n\n  const renderItems = () => {\n    return (\n      <div className=\"container\">\n        <Container>\n          {items.map((element) => {\n            return (\n              <Item\n                key={element.id}\n                id={element.id}\n                title={element.title ? element.title : element.name}\n                imageUrl={\n                  \"http://image.tmdb.org/t/p/w500\" + element.poster_path\n                }\n                popularity={element.popularity}\n                releasedDate={element.release_date}\n                overview={element.overview}\n              />\n            )\n          })}\n        </Container>\n      </div>\n    )\n  }\n\n  const renderContent = () => (isLoading ? renderLoadingState() : renderItems())\n\n  return <Container>{renderContent()}</Container>\n}\n\nexport default TabContent\n","import React from \"react\"\n\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 120,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}))\n\nexport default function SelectBox(props) {\n  const classes = useStyles()\n  const rows = []\n  for (let i = 0; i < props.category.length; i++) {\n    rows.push(\n      <option key={i} value={props.category[i]}>\n        {props.category[i]}\n      </option>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Category</InputLabel>\n        <Select\n          native\n          onChange={(e) => props.onSelectChange(e.target.value)}\n          label=\"Category\"\n          inputProps={{\n            name: \"catrgory\",\n            id: \"outlined-age-native-simple\",\n          }}\n        >\n          {rows}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Pagination from \"@material-ui/lab/Pagination\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      marginTop: theme.spacing(5),\n      marginBottom: theme.spacing(10),\n      position: \"relative\",\n    },\n  },\n  pagination: {\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translate(-50%)\",\n  },\n}))\n\nexport default function BasicPagination({\n  itemsPerPage,\n  totalItems,\n  paginate,\n}) {\n  const classes = useStyles()\n  const itemNumbers = []\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    itemNumbers.push(i)\n  }\n  //   console.log(\"total page in pagination: \", totalItems)\n  return (\n    <div className={classes.root}>\n      <Pagination\n        count={totalItems}\n        color=\"primary\"\n        onChange={(e, currentPage) => paginate(currentPage)}\n        className={classes.pagination}\n      />\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport getItems from \"../../service/api\"\nimport TabContent from \"../tabs/TabContent\"\nimport SelectBox from \"../layout/SelectBox\"\nimport { Container } from \"@material-ui/core\"\n\nimport BasicPagination from \"../layout/Pagination\"\n\nconst movieCategory = [\"popular\", \"now_playing\", \"top_rated\", \"upcoming\"]\nconst tvShowCategory = [\"popular\", \"top_rated\", \"airing_today\", \"on_the_air\"]\n\nclass TabContentContainer extends Component {\n  state = {\n    items: [],\n    isLoading: false,\n    source: this.props.source || \"movie\",\n    searchQuery: this.props.searchQuery,\n    searchType: this.props.searchType || \"multi\",\n    category: \"popular\",\n    totalPage: 1,\n    page: 1,\n    currentPage: 1,\n    indexOfLastItem: 10,\n    indexOfFirstItem: 0,\n    itemPerPage: 10,\n    currentItems: [],\n  }\n\n  componentDidMount() {\n    const { page } = this.state\n\n    // console.log(source, category)\n    this.fetchItems(page)\n  }\n\n  onSelectChange = async (category) => {\n    const { currentPage } = this.state\n    // console.log(\"the element selected: \", category)\n    await this.setState({\n      category,\n      currentPage: 1,\n    })\n    this.fetchItems(currentPage)\n  }\n\n  fetchItems = (page) => {\n    const { category, source, indexOfFirstItem, indexOfLastItem } = this.state\n    const sourceUrl = source + \"/\" + category\n    this.setState({\n      isLoading: true,\n    })\n    // console.log(\"Movie Category: \", sourceUrl)\n    getItems(sourceUrl, page).then(\n      (items) => {\n        // console.log(\"totalPage : \", items.total_pages)\n        this.setState({\n          items: items.results,\n          isLoading: false,\n          totalPage: Math.floor(items.total_pages * 2),\n          currentItems: items.results.slice(indexOfFirstItem, indexOfLastItem),\n        })\n      },\n      (error) => {\n        console.log(\"Error \", `Something went wrong! ${error}`)\n      }\n    )\n  }\n\n  render() {\n    const {\n      items,\n      isLoading,\n      source,\n      totalPage,\n      currentItems,\n      itemPerPage,\n    } = this.state\n\n    //add pagination\n    // console.log(\"totalPage : \", totalPage)\n    const paginate = async (currPage) => {\n      await this.setState({\n        page: Math.ceil(currPage / 2),\n        currentPage: currPage,\n        indexOfLastItem: currPage % 2 === 1 ? 10 : 20,\n        indexOfFirstItem: currPage % 2 === 1 ? 0 : 10,\n        currentItems: items.slice(\n          currPage % 2 === 1 ? 10 : 20,\n          currPage % 2 === 1 ? 0 : 10\n        ),\n      })\n\n      this.fetchItems(Math.ceil(currPage / 2))\n    }\n\n    return (\n      <Container>\n        {source === \"movie\" ? (\n          <SelectBox\n            category={movieCategory}\n            onSelectChange={this.onSelectChange}\n          />\n        ) : null}\n        {source === \"tv\" ? (\n          <SelectBox\n            category={tvShowCategory}\n            onSelectChange={this.onSelectChange}\n          />\n        ) : null}\n        <TabContent items={currentItems} isLoading={isLoading} />\n        <BasicPagination\n          itemsPerPage={itemPerPage}\n          totalItems={totalPage}\n          paginate={paginate}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default TabContentContainer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Box from \"@material-ui/core/Box\"\nimport TabContentContainer from \"../containers/TabContentContainer\"\nimport TabContent from \"../tabs/TabContent\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  box: {\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n}))\n\nfunction TabPanel(props) {\n  const classes = useStyles()\n  const {\n    children,\n    value,\n    index,\n    searchInitiated,\n    searchText,\n    searchQuery,\n    searchType,\n    searchItems,\n    isLoading,\n    ...other\n  } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      className={classes.root}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === 0 && (\n        <Box p={3} className={classes.box}>\n          <TabContentContainer source={\"movie\"} />\n        </Box>\n      )}\n      {value === 1 && (\n        <Box p={3} className={classes.box}>\n          <h1>{props.searchText}</h1>\n          <TabContent items={props.searchItems} isLoading={props.isLoading} />\n        </Box>\n      )}\n      {value === 2 && (\n        <Box p={3} className={classes.box}>\n          <TabContentContainer source={\"tv\"} />\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.any.isRequired,\n}\n\nexport default TabPanel\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\n\nimport TabPanel from \"../tabs/TabPanel\"\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault()\n      }}\n      {...props}\n    />\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    margin: theme.spacing(1),\n    borderRadius: 3,\n    border: \"2px solid #f5f5f5\",\n    boxShadow: \"0 3px 5px 2px rgba(245, 245, 245, .3)\",\n  },\n  tabColor: {\n    backgroundColor: \"#017eff\",\n  },\n  tabPanel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(2),\n  },\n}))\n\nfunction TabScreen(props) {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"MOVIES\" className={classes.tabColor} />\n          <LinkTab label=\"SEARCH RESULT\" className={classes.tabColor} />\n          <LinkTab label=\"TV SHOWS\" className={classes.tabColor} />\n        </Tabs>\n      </AppBar>\n      <TabPanel\n        value={value}\n        className={classes.tabPanel}\n        searchQuery={props.searchQuery}\n        searchType={props.searchType}\n        searchText={props.searchText}\n        searchInitiated={props.searchInitiated}\n        searchItems={props.searchItems}\n        isLoading={props.isLoading}\n      ></TabPanel>\n    </div>\n  )\n}\n\nexport default TabScreen\n","import axios from \"axios\"\nimport { API_KEY, BASE_URL } from \"../config/api_config\"\n\nconst searchItems = async (searchUrl, query, page) => {\n  const url = BASE_URL + \"/\" + searchUrl\n  console.log(url)\n  try {\n    const response = await axios.get(url, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    })\n\n    const items = response.data\n\n    return items\n  } catch (err) {\n    throw err\n  }\n}\n\nexport default searchItems\n","import React, { Component } from \"react\"\n\nimport SearchForm from \"../forms/SearchForm\"\nimport TabScreen from \"../screens/TabScreen\"\nimport { Container } from \"@material-ui/core\"\nimport searchItems from \"../../service/searchapi\"\n\nclass ContentContainer extends Component {\n  state = {\n    searchItems: [],\n    isLoading: false,\n    searchQuery: \"\",\n    searchType: \"multi\",\n    searchInitiated: false,\n    searchText: \"Please Enter a SEARCH\",\n  }\n\n  handleInputChange = (searchQuery) => {\n    this.setState({\n      searchQuery,\n      searchText: \"Please initiate the SEARCH ...\",\n    })\n    if (searchQuery.length === 0) {\n      this.setState({\n        searchInitiated: false,\n        searchText: \"Please Enter a SEARCH\",\n      })\n    }\n  }\n\n  onSelectChange = async (searchType) => {\n    console.log(searchType)\n    await this.setState({\n      searchType,\n    })\n  }\n\n  handleSubmit = (e, page) => {\n    const { searchQuery, searchType, searchInitiated } = this.state\n    e.preventDefault()\n\n    console.log(\"search on Submit:\", searchQuery)\n    if (searchQuery.length > 0) {\n      this.setState({\n        searchInitiated: true,\n        searchText: \"\",\n      })\n    }\n    console.log(\"Search Type: \", searchType)\n    console.log(\"Search initiated: \", searchInitiated)\n    const searchUrl = \"search/\" + searchType\n    searchItems(searchUrl, searchQuery).then(\n      (searchItems) => {\n        console.log(searchItems)\n        this.setState({\n          searchItems: searchItems.results,\n          isLoading: false,\n        })\n        if (searchItems.length === 0) {\n          this.setState({\n            searchText: \"Sorry, there were no results\",\n          })\n        }\n      },\n      (error) => {\n        console.log(\"Error \", `Something went wrong! ${error}`)\n      }\n    )\n  }\n\n  render() {\n    const {\n      searchQuery,\n      searchType,\n      searchInitiated,\n      searchText,\n      isLoading,\n      searchItems,\n    } = this.state\n\n    return (\n      <Container>\n        <SearchForm\n          onInputChange={this.handleInputChange}\n          onSelectChange={this.onSelectChange}\n          onSubmit={this.handleSubmit}\n        />\n        <TabScreen\n          searchQuery={searchQuery}\n          searchType={searchType}\n          searchInitiated={searchInitiated}\n          searchText={searchText}\n          searchItems={searchItems}\n          isLoading={isLoading}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default ContentContainer\n","import React from \"react\"\nimport \"./App.css\"\n\nimport Container from \"@material-ui/core/Container\"\nimport Header from \"./components/layout/Header\"\nimport ContentContainer from \"./components/containers/ContentContainer\"\n\nfunction App() {\n  return (\n    <Container fixed>\n      <Header />\n\n      <ContentContainer />\n    </Container>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}